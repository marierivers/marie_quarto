---
title: "Data Wrangling with R and Python"
editor: visual
---

The purpose of this document is to illustrate common data wrangling commands with R and Python. These examples use data from the [`lterdatasampler`](https://lter.github.io/lterdatasampler/index.html) package.

# Basics - getting to know your data
The `and_vertebrates` dataset includes trout and salamander observations from Mack Creek which is part of the Andrews Forest LTER.
```{r}
#| warning: false
library(tidyverse)

trout_salamander_R <- read_csv('data/and_vertebrates.csv')
```

```{python}
import pandas as pd

trout_salamander_py = pd.read_csv('data/and_vertebrates.csv')
```

## Head and Tail
Head returns the first few rows of the data frame and tail returns the last rows. The integer in the examples below is optional and used to specify the number of rows returned.
```{r}
#| column: page
head(trout_salamander_R, 5) # include an integrer is you want to specify the number of rows returned
tail(trout_salamander_R)
```
:::{.column-body-outset}
```{python}
#| column: screen
trout_salamander_py.head(5) # include an integrer is you want to specify the number of rows returned

trout_salamander_py.tail()
```
:::

## Class / Type
```{r}
class(trout_salamander_R)
```

```{python}
#type(trout_salamander_py)
```

## Shape
```{r}
#| echo: false
trout_salamander_nrow <- nrow(trout_salamander_R)
trout_salamander_ncol <- ncol(trout_salamander_R)
```
Here R and Python both tell us that the dataframe has `r trout_salamander_nrow` rows and `r trout_salamander_ncol` columns.

```{r}
dim(trout_salamander_R) # returns the number of rows and columns in a data frame
nrow(trout_salamander_R)
ncol(trout_salamander_R)
```


```{python}
trout_salamander_py.shape
trout_salamander_py.shape[0] # number of rows
trout_salamander_py.shape[1] # number of columns
```

## Summary / Describe
```{r}
summary(trout_salamander_R)
```

```{python}
trout_salamander_py.describe()
```
```{python}
trout_salamander_py.info()
```
## Variable Names
```{r}
names(trout_salamander_R) # returns column names of a data frame
```

```{python}
trout_salamander_py.columns
```

xxx
unique
class(penguins$species) # determine the data type of a given column

# Filtering

# Grouping

# Statistics
## mean, median, mode
## stats of a group

# New Columns

# Visualizations
```{r}
#| label: fig-trout_size
#| fig-cap: "species length vs. weight"
#| column: margin
#| warning: false

trout_salamander_R <- trout_salamander_R %>% 
  drop_na(species) %>% 
  filter(species != 'Cascade torrent salamander')

species_names <- c('Cutthroat trout' = 'cutthroat trout',
                   'Coastal giant salamander' = 'coastal giant salamander')

section_names <- c('CC' = 'clear cut forest',
                   'OG' = 'old growth coniferous forest')


ggplot(data = trout_salamander_R, aes(x = length_1_mm, y = weight_g)) +
  geom_point(aes(color = species), show.legend = FALSE) +
  labs(x = "Length (mm)",
       y = "Weight (g)",
       color = "Species") +
  facet_grid(section ~ species, labeller = labeller(section = section_names, species = species_names))
```

```{python}
#| label: fig-cap-margin
#| fig-cap: "length vs. weight with Python"
#| cap-location: margin
import matplotlib.pyplot as plt
trout_salamander_py.plot(x='length_1_mm', y='weight_g', kind='scatter')
plt.show()
```

# Putting it all together

::: {.border}
This content can be styled with a border
:::

::::: {#special .sidebar}

::: {.warning}
Here is a warning.
:::

More content.
:::::

> Blockquote

```{r}
#| column: screen-inset-shaded

library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
```

xxx 

::: {.column-margin}
![Lyra in front of flowers](images/lyra_flowers.jpg)
:::

::: {.column-margin}
Some text for the margin
:::

# playing with layouts
::: {.grid}

::: {.g-col-4}
This column takes 1/3 of the page
:::

::: {.g-col-8}
This column takes 2/3 of the page
:::

:::

xxx

::: {.grid}

::: {.g-col-6}
This column takes 1/2 of the page

`r fontawesome::fa("r-project", fill = "#5A5A5A", a11y = "sem")`

```{r}
names(trout_salamander_R) # returns column names of a data frame
```

:::

::: {.g-col-6}
This column takes 1/2 of the page

`r fontawesome::fa("python", fill = "#5A5A5A", a11y ="sem")`

```{python}
trout_salamander_py.columns
```
:::

:::

# Citation

Horst A, Brun J (2022). lterdatasampler: Educational dataset examples from the Long Term Ecological Research program. R package version 0.1.0, <https://github.com/lter/lterdatasampler>.



